------------------------------------------
--	  Section 3 Group By statemnents	--
------------------------------------------

--------
-- aggregation function
--------
-- select * from film;

-- min and max --
-- select min(replacement_cost) from film;
-- select max(replacement_cost) from film;
-- select min(replacement_cost), max(replacement_cost) from film;

-- average and rounding to decimal place
-- select round(avg(replacement_cost),2) from film;

--- sum
-- select sum(replacement_cost) from film;


------------------------------------------
--	  	   Group By statemnents			--
------------------------------------------

-- select * from payment;
-- select customer_id,sum(amount) from payment
-- group by customer_id
-- order by sum(amount) desc 

-- select customer_id,count(amount) from payment
-- group by customer_id
-- order by count(amount) desc

-- select customer_id,staff_id,sum(amount) from payment
-- group by staff_id,customer_id
-- order by customer_id

-- select date(payment_date),sum(amount) from payment
-- group by date(payment_date)
-- order by sum(amount) desc

------------------------------------------
--	  	   Group By Challanges			--
------------------------------------------
-- select staff_id,count(amount) from payment
-- group by staff_id

-- select * from film limit 1;
-- select distinct(rating),round(avg(replacement_cost), 2) from film
-- group by rating

-- select customer_id,sum(amount) from payment
-- group by customer_id
-- order by sum(amount) desc
-- limit 5;

------------------------------------------
--				  Having				--
------------------------------------------

-- select * from payment;
-- select customer_id,sum(amount) from payment
-- where customer_id not in (184,87,477)
-- group by customer_id

-- select customer_id,sum(amount) from payment
-- group by customer_id
-- having sum(amount) > 100
-- order by sum(amount)

-- select * from customer limit 10;
-- select store_id,count(customer_id) from customer
-- group by store_id
-- having count(customer_id) > 300;

------------------------------------------
--		      Having challange			--
------------------------------------------

-- select * from payment limit 2;

-- select customer_id,count(amount) from payment
-- group by customer_id
-- having count(amount) >= 40

-- select customer_id,sum(amount),staff_id from payment
-- group by customer_id,staff_id
-- having staff_id = 2 and sum(amount) >= 100
-- order by customer_id

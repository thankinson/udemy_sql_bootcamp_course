------------------------------------------------
-- 				       Joins Section	              --
------------------------------------------------

------------------------------
--		AS statments		--
------------------------------
---------------------------------------------------
-- AS statement only works in select statmnet    --
-- and can not be used elsewahere in the querey. --
---------------------------------------------------
-- select amount as rental_price from payment;

-- select sum(amount) as net_revenue from payment; 

-- select customer_id,sum(amount) as total_spent
-- from payment
-- group by customer_id


------------------------------
--		inner Join   		--
------------------------------

--  select first_name,last_name,customer.address_id,address.address from customer
--  inner join address 
--  on customer.address_id = address.address_id
--  order by customer_id
--  limit 5;



-- select 
-- customer.customer_id,
-- first_name,last_name,
-- payment.payment_id,payment.staff_id,
-- payment.amount,payment.rental_id 
-- from customer
-- inner join payment
-- on customer.customer_id = payment.customer_id
-- order by payment.payment_id asc



-- select payment_id,payment.customer_id,first_name 
-- from payment
-- inner join customer
-- on payment.customer_id = customer.customer_id
-- limit 4


------------------------------
--		Outer Join   		--
------------------------------

-- select * from payment
-- full outer join customer
-- on payment.customer_id = customer.customer_id

-- select * from customer
-- full outer join payment
-- on customer.customer_id = payment.customer_id
-- where customer.customer_id is null
-- or payment.payment_id is null

-- select count(distinct customer_id) from customer;
-- select count(distinct customer_id) from payment;

------------------------------
--	   Left Outer Join 		--
------------------------------

-- 'LEFT OUTER JOIN' can be shortend to 'LEFT JOIN'
-- select * from payment
-- left join customer
-- on payment.customer_id = customer.customer_id
-- limit 5

-- select * from film
-- select * from inventory

-- select 

-- film.film_id, film.title, 
-- inventory_id, inventory.store_id 

-- from film
-- left join inventory
-- on inventory.film_id = film.film_id
-- where inventory.film_id is null

------------------------------
--	   Right Outer Join 	--
------------------------------


-- same as left outer join but in reverse

------------------------------
--	   		Union	 		--
------------------------------


-- not worth the hassle

------------------------------
--	   	  challanges	 	--
------------------------------
-- 1. California sales tax laws have changed and we need to alert our cutomers to this through email.
--    What are the emails of the customers who live in California?

-- select first_name,last_name,email,district from customer
-- inner join address
-- on customer.address_id = address.address_id
-- where district like 'California'
----------------------------------------------------
----------------------------------------------------

-- 2. A customer walks in and is a huge fan of the actor "Nick Wahlberg" and wants to
--    which films he has been in.

--    Get a list of all the films "Nick Wahlberg has been in"

-- select * from actor
-- where first_name = 'Nick' and last_name = 'Wahlberg'

----------------------------------------------------------------
-- this query wasto see all data from the search

-- select * from film
-- inner join film_actor on film.film_id = film_actor.film_id
-- inner join actor on film_actor.actor_id = actor.actor_id
-- where actor.first_name = 'Nick' and actor.last_name = 'Wahlberg'
------------------------------------------------------------------
-- the final query just brings back the list of films

-- select title,first_name,last_name from film
-- inner join film_actor on film.film_id = film_actor.film_id
-- inner join actor on film_actor.actor_id = actor.actor_id
-- where first_name = 'Nick' and last_name = 'Wahlberg'
---------------------------------------------------------------------
---------------------------------------------------------------------

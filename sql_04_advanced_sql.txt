---------------------------
-- advanced sql commands --
---------------------------

-- timestamps and extract --

-- show all
-- select now() 
-- select timeofday()
-- select current_time
-- select current_date

-- select * from customer
-- select extract(year from last_update) from customer
-- select extract(month from last_update) from customer
-- select extract(day from last_update) from customer
-- select extract(week from last_update) from customer
-- select extract(quarter from last_update) from customer

-- select 

-- extract(day from last_update) as day,
-- extract(month from last_update) as month,
-- extract(year from last_update) as year

-- from customer

-- select age(last_update) from customer

-- select to_char(last_update, 'dd-mm-yyyy') from customer

------------------------

-- select * from payment

-- select extract(year from payment_date) as year from payment
-- select extract(month from payment_date) as month from payment

-- select age(payment_date) from payment

-- select to_char(payment_date, 'dd-mm-yy') from payment

---------------------------
--  timestamp challange  --
---------------------------

-- 1. During which months did payments occur?
--	  format your answer to return back the full month name

-- select to_char(payment_date, 'MONTH') from payment

-- select distinct(to_char(payment_date, 'MONTH')) from payment

----------------------------------------------------

-- 2. How many payments occured on a monday?

-- select * from payment

-- my way
-- select count(*) from payment
-- where (to_char(payment_date, 'FMDay')) = 'Monday'

-- the course way
-- select count(*)
-- from payment
-- where extract(dow from payment_date) = 1


-----------------------------
--  Mathmaticle functions  --
-----------------------------

-- select * from film
-- select round(rental_rate/replacement_cost, 2) as percent_cost from film

-- select 0.1 * replacement_cost as deposit from film

-----------------------------
--  String functions   	   --
-----------------------------

-- select * from customer

-- select length(first_name) from customer

-- select first_name || ' ' || last_name as name from customer

-- select lower(left(first_name, 1)) || lower(last_name) || '@gmail.com' as custom_email
-- from customer;


-----------------------------
--    	SubQuery    	   --
-----------------------------

-- select * from film

-- select title, rental_rate from film
-- where rental_rate >(select avg(rental_rate) from film)

-- select * from rental
-- select * from inventory

-- select * from rental 
-- where return_date between '2005-05-29' and '2005-05-30'

-- select inventory.film_id from rental 
-- inner join inventory 
-- on inventory.inventory_id = rental.inventory_id
-- where return_date between '2005-05-29' and '2005-05-30'

-- select film_id,title from film
-- where film_id in
-- (select inventory.film_id from rental 
-- inner join inventory 
-- on inventory.inventory_id = rental.inventory_id
-- where return_date between '2005-05-29' and '2005-05-30')
-- order by title

-- select first_name,last_name from customer as c
-- where exists
-- (
-- 	select * from payment as p
-- 	where p.customer_id = c.customer_id and amount > 11
-- )

-- select first_name,last_name from customer as c
-- where not exists
-- (
-- 	select * from payment as p
-- 	where p.customer_id = c.customer_id and amount > 11
-- )

-----------------------------
--    	Self join   	   --
-----------------------------

-- select * from film

-- select title,length from film
-- where length = 117

-- this is not teh right way
-- select f1.title, f2.title, f1.length 
-- from film as f1
-- inner join film as f2
-- on f1.film_id = f2.film_id
-- and f1.length = f2.length

-- this is
-- select f1.title, f2.title, f1.length 
-- from film as f1
-- inner join film as f2
-- on f1.film_id != f2.film_id
-- and f1.length = f2.length

























